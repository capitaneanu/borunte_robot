<launch>
  <!-- The planning and execution components of MoveIt! configured to run -->
  <!-- using the ROS-Industrial interface. -->

  <!-- HAL debug output -->
  <!-- - Output HAL debug messages to screen (console) -->
  <arg name="hal_debug_output" default="false"/>
  <!-- - Set HAL debug level, 0-5 -->
  <arg name="hal_debug_level"/>

  <!-- Non-standard joint names:
       - Create a file [robot_moveit_config]/config/joint_names.yaml
           controller_joint_names: [joint_1, joint_2, ... joint_N]
       - Update with joint names for your robot (in order expected by rbt controller)
       - and uncomment the following line: -->
  <rosparam command="load" file="$(find borunte_moveit_config)/config/joint_names.yaml"/>

  <!-- the "sim" argument controls whether we connect to a Simulated or Real robot -->
  <!--  - if sim=false, a robot_ip argument is required -->
  <arg name="sim" default="$(eval optenv('HAVE_REAL_HARDWARE', 'false') == 'false')"/>
  <!--<arg name="robot_ip" unless="$(arg sim)" />-->
  <param
      name="sim"
      value="$(arg sim)"
      />

  <!-- the "rviz" argument controls whether we start an RViz instance or not -->
  <arg name="rviz"/>

  <arg name="tool"/>
  <!-- load the robot_description parameter before launching ROS-I nodes -->
  <include file="$(find borunte_moveit_config)/launch/planning_context.launch">
    <arg name="tool" value="$(arg tool)" />
    <arg name="load_robot_description" value="true" />
  </include>

  <!-- load the parameter persistence server -->
  <include
      file="$(find borunte_support)/launch/parameter_persistence.launch"
      />

  <!-- run the robot simulator and action interface nodes -->
  <group if="$(arg sim)">
    <!--<include file="$(find industrial_robot_simulator)/launch/robot_interface_simulator.launch" />-->
  </group>

  <!-- run the "real robot" interface nodes -->
  <!--   - this typically includes: robot_state, motion_interface, and joint_trajectory_action nodes -->
  <!--   - replace these calls with appropriate robot-specific calls or launch files -->
  <!--<group unless="$(arg sim)">-->
    <include file="$(find borunte_support)/launch/hal_hardware.launch">
      <arg name="hal_debug_output" value="$(arg hal_debug_output)"/>
      <arg name="hal_debug_level" value="$(arg hal_debug_level)"/>
      <arg name="sim" value="$(arg sim)"/>
      <arg name="tool" value="$(arg tool)" />
    </include>
    <!--<include file="$(find borunte_support)/launch/borunte_interface.launch"/>-->
    <!--<include file="$(find [robot_interface_pkg])/launch/robot_interface.launch" >
      <arg name="robot_ip" value="$(arg robot_ip)"/>
    </include>-->
  <!--</group>-->

  <!-- Start tool/gripper nodes -->
  <node pkg="ezgripper_driver" type="ezgripper.py" name="ezgripper" output="screen" if="$(eval tool == 'ezgripper_gen2_plus' and not sim)">
    <param name="port" value="hwgrep://0403:6015"/>
    <param name="baud" value="57600"/>
    <rosparam param="grippers">{main:[1]}</rosparam>
  </node>
  <node pkg="ezgripper_driver" type="ezgripper_sim.py" name="ezgripper" output="screen" if="$(eval tool == 'ezgripper_gen2_plus' and sim)">
    <rosparam param="grippers">{main:[1]}</rosparam>
  </node>

  <!-- publish the robot state (tf transforms) -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

  <include file="$(find borunte_moveit_config)/launch/move_group.launch">
    <arg name="publish_monitored_planning_scene" value="true" />
  </include>

  <group if="$(arg rviz)">
    <include file="$(find borunte_moveit_config)/launch/moveit_rviz.launch">
      <arg name="config" value="true"/>
    </include>
  </group>

  <!-- <include file="$(find borunte_moveit_config)/launch/default_warehouse_db.launch" /> -->

</launch>
